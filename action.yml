name: 'chiaro-oscuro'
description: 'AI-powered logo generation for light and dark themes using GitHub Models'
author: 'Jason McPheron'

branding:
  icon: 'sun'
  color: 'yellow'

inputs:
  project-name:
    description: 'Name of your project or repository'
    required: true
  description:
    description: 'Brief description of what your project does'
    required: true
  style:
    description: 'Logo design style (modern, minimal, playful, corporate, tech)'
    required: false
    default: 'modern'
  github-token:
    description: 'GitHub token for API access'
    required: true
    default: ${{ github.token }}
  output-dir:
    description: 'Directory for generated logos'
    required: false
    default: 'assets'
  model:
    description: 'AI model (github/gpt-4o-mini, github/llama-3.1-70b-instruct, github/deepseek-r1)'
    required: false
    default: 'github/gpt-4o-mini'
  branch-name:
    description: 'Branch name for PR'
    required: false
    default: 'chiaro-oscuro/generate-logo'
  commit-message:
    description: 'Commit message'
    required: false
    default: 'Add AI-generated logo for light and dark themes'
  pr-title:
    description: 'Pull request title'
    required: false
    default: 'Add theme-aware logo generated by AI'

outputs:
  light-logo-path:
    description: 'Path to the generated light theme logo'
  dark-logo-path:
    description: 'Path to the generated dark theme logo'
  pr-url:
    description: 'URL of the created pull request'

runs:
  using: 'composite'
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        if [ -z "${{ inputs.project-name }}" ]; then
          echo "‚ùå Project name is required"
          exit 1
        fi
        if [ -z "${{ inputs.description }}" ]; then
          echo "‚ùå Project description is required"
          exit 1
        fi
        echo "‚úÖ Project: ${{ inputs.project-name }}"
        echo "üìù Description: ${{ inputs.description }}"
        echo "üé® Style: ${{ inputs.style }}"
    
    - name: Set up Python and UV
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install UV
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Install dependencies and LLM plugins
      shell: bash
      run: |
        cd ${{ github.action_path }}
        echo "üì¶ Installing dependencies with UV..."
        uv sync --dev
        
        echo "üîå Installing LLM GitHub Models plugin..."
        uv run llm install llm-github-models
        
        echo "üîç Verifying LLM setup..."
        uv run llm --version
        uv run llm models list | grep -E "(github|gpt|llama)" || echo "No GitHub models found yet - will be available after first use"
    
    - name: Generate logo variants using LLM CLI
      shell: bash
      env:
        GITHUB_MODELS_KEY: ${{ inputs.github-token }}
      run: |
        cd ${{ github.action_path }}
        echo "üé® Generating logo variants using LLM CLI..."
        
        # Read the logo generation prompt template
        PROMPT_TEMPLATE=$(cat prompts/generate-logo.txt)
        
        # Replace placeholders with actual values
        PROMPT="${PROMPT_TEMPLATE//\{\{PROJECT_NAME\}\}/${{ inputs.project-name }}}"
        PROMPT="${PROMPT//\{\{DESCRIPTION\}\}/${{ inputs.description }}}"
        PROMPT="${PROMPT//\{\{STYLE\}\}/${{ inputs.style }}}"
        
        # Generate logos using LLM CLI
        echo "ü§ñ Running AI inference with model: ${{ inputs.model }}"
        echo "$PROMPT" | uv run llm prompt \
          -m "${{ inputs.model }}" \
          --system "You are a professional logo designer. Create clean, modern SVG logos that work well in both light and dark themes." \
          > /tmp/logo_response.txt
        
        # Check if generation was successful
        if [ $? -eq 0 ] && [ -s /tmp/logo_response.txt ]; then
          echo "‚úÖ Logo generation completed"
          echo "üìä Response size: $(wc -c < /tmp/logo_response.txt) characters"
          echo "üìù Response preview:"
          head -3 /tmp/logo_response.txt
        else
          echo "‚ùå Logo generation failed"
          exit 1
        fi
    
    - name: Process AI responses and save logos
      shell: bash
      env:
        OUTPUT_DIR: ${{ inputs.output-dir }}
        LOGO_RESPONSE_FILE: /tmp/logo_response.txt
      run: |
        cd ${{ github.action_path }}
        echo "üîÑ Processing AI responses..."
        uv run python src/process_logos_llm.py
    
    - name: Create pull request with optimized logos
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        BRANCH_NAME: ${{ inputs.branch-name }}
        COMMIT_MESSAGE: ${{ inputs.commit-message }}
        PR_TITLE: ${{ inputs.pr-title }}
      run: |
        # Configure git
        git config --global user.name "chiaro-oscuro-v2[bot]"
        git config --global user.email "action@github.com"
        
        # Check if there are changes to commit
        if git diff --quiet && git diff --cached --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        
        # Delete existing branch if it exists
        git push origin --delete "$BRANCH_NAME" 2>/dev/null || true
        
        # Create and switch to new branch
        git checkout -b "$BRANCH_NAME"
        
        # Add and commit changes
        git add ${{ inputs.output-dir }}/logo-*.svg README.md
        git commit -m "$COMMIT_MESSAGE"
        
        # Push branch
        git push origin "$BRANCH_NAME"
        
        # Create pull request using GitHub CLI
        PROJECT_NAME="${{ inputs.project-name }}"
        DESCRIPTION="${{ inputs.description }}"
        STYLE="${{ inputs.style }}"
        MODEL="${{ inputs.model }}"
        OUTPUT_DIR="${{ inputs.output-dir }}"
        
        PR_BODY="ü§ñ Automatically generated logo using AI

## üìã Project Details
- **Name**: $PROJECT_NAME
- **Description**: $DESCRIPTION
- **Style**: $STYLE

## ‚ú® Changes
- Added \`$OUTPUT_DIR/logo-light.svg\` optimized for light themes
- Added \`$OUTPUT_DIR/logo-dark.svg\` optimized for dark themes  
- Updated README.md with theme-aware \`<picture>\` element

## üöÄ Technology
- **Model**: $MODEL
- **Authentication**: GitHub's built-in models (no API keys!)
- **Framework**: LLM CLI with GitHub Models

## üéØ Next Steps
1. Review the generated logos
2. Merge if you're happy with them
3. Re-run with different parameters if needed

Generated by chiaro-oscuro üåì"
        
        # Try to create PR, but don't fail if it can't (e.g., in forks or without permissions)
        gh pr create \
          --title "$PR_TITLE" \
          --body "$PR_BODY" \
          --head "$BRANCH_NAME" \
          --base main || echo "‚ö†Ô∏è Could not create PR automatically. Please create it manually from branch: $BRANCH_NAME"